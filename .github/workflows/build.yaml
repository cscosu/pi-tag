name: build
permissions: write-all
on: push
jobs:
  list:
    name: List packer files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: List packer files
        id: set-matrix
        run: |
          echo "matrix=$(find packer/ -type f -name "*.pkr.hcl" -printf '%f\n' | sed 's/\.pkr.hcl$//1' | jq -R -s -c 'split("\n")[:-1]'))" >> $GITHUB_OUTPUT

  create-release:
    name: Create release
    needs: list
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get short hash
        id: short-sha
        run: |
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref }}-${{ steps.short-sha.outputs.sha }} -t "Packer images" -n "Release ${{ github.ref }}-${{ steps.short-sha.outputs.sha }}"

  build:
    name: Build ${{ matrix.image }}
    needs: [list, create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.list.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Packer build
        run: |
          docker run --rm --privileged -v /dev:/dev -v $PWD:/build mkaczanowski/packer-builder-arm:latest build packer/${{ matrix.image }}.pkr.hcl

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref }}-${{ steps.short-sha.outputs.sha }} *.img

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: "*.img"
          path: "*.img"
