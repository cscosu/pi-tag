name: build
permissions: write-all
on: push
jobs:
  init:
    name: Initialize
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      tagname: ${{ steps.tag-name.outputs.tagname }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: List packer files
        id: set-matrix
        run: |
          echo "matrix=$(find packer/ -type f -name '*.pkr.hcl' -printf '%f\n' | sed 's/\.pkr.hcl$//1' | jq -R -s -c 'split("\n")[:-1]'))" >> $GITHUB_OUTPUT

      - name: Get tag name
        id: tag-name
        run: |
          echo "tagname=${{ github.ref }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.tag-name.outputs.tagname }} -t "Packer images" -n "Packer generated images (${{ steps.tag-name.outputs.tagname }})"

  build:
    name: Build ${{ matrix.image }}
    needs: init
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.init.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Packer build
        run: |
          docker run --rm --privileged -v /dev:/dev -v $PWD:/build mkaczanowski/packer-builder-arm:latest build packer/${{ matrix.image }}.pkr.hcl

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.init.outputs.tagname }} $(find -type f -name '*.img')

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: "*.img"
          path: "*.img"
